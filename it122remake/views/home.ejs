<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Home</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>

    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  </head>
  <body>
    <div id="root"></div>
  </body>
<script type="text/babel">
const { Component } = React;
const { render } = ReactDOM;
const { useState } = React;

const productStyle = {
    cursor: 'pointer'
}

const selectedProduct = {
    backgroundColor: '#e6e6e6'
}

const ProductApp = () =>{
    const data = <%- products %>;
    const [selectedProduct, setSelectedProduct] = useState("");
	
	const productClickHandler = (product) => {
		setSelectedProduct(product);
	}
	
    return(
    <div>
        <ProductList products={data} selectedItem={selectedProduct} clickHandler={productClickHandler} />
		<ProductDetail product={selectedProduct} clearingButtonClickHandler={productClickHandler} />
    </div>
    );
}

const ProductList = (props) =>{
    const productClickHandler = (product) => {
        props.clickHandler(product);
    }
    return (
        <ul>
            {props.products.map(product => {
                return (
                <li style={product._id === props.selectedItem._id ? selectedProduct : productStyle} 
                    key={product._id}
                    onClick={() =>productClickHandler(product)} >
                        {product.name}
                </li>
                );
            })}
        </ul>
    )}
	


const ProductDetail = (props) => {
    const buttonClickHandler = () => {
        props.clearingButtonClickHandler("");
    }

    if(!props.product){
        return (
            <div>
                <h4>Detail:</h4>
            </div>
        )
    }


    return (
        <div className="product-detail__container">
            <h4>Detail:</h4>
            <h3>{props.product.name}</h3>
            <h4>promo: {props.product.promote}</h4>
            <h4>type: {props.product.type}</h4>
            <h4>brand: {props.product.brand}</h4>
            <h4>price: ${props.product.price}</h4>
            <h4>volume: {props.product.volume}ML</h4>
            <h4>rating: {props.product.ratingAverage}/5 ({props.product.ratingAmount})</h4>
            <ul>
                <h4>description:</h4>
                {
                    props.product.description.map((des, index) => <li key={index}>{des}</li>)}
            </ul>
            <ul>
                <h4>effect:</h4>
            {props.product.effect.map((eff, index) => <li key={index}>{eff}</li>)}
            </ul>
            <ul>
                <h4>usage:</h4>
            {props.product.usage.map((usage, index) => <li key={index}>{usage}</li>)}
            </ul>
            <ul>
                <h4>skin types:</h4>
            {props.product.skinType.map((skin, index) => <li key={index}>{skin}</li>)}
            </ul>
            <ul>
                <h4>skin concern:</h4>
            {props.product.skinConcern.map((skin, index) => <li key={index}>{skin}</li>)}
            </ul>
            <button onClick={buttonClickHandler}>Clear</button>
        </div>
	)
}



	
	
ReactDOM.render(<ProductApp />, document.getElementById("root"));
	
    //ReactDOM.render(<Products products={data} clickHandler={productClickHandler}/>,
    //document.getElementById("root"));
</script>
</html>
